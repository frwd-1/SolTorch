Interfaces play a significant role in establishing standardized ways of interacting with contracts. They provide several benefits in smart contract development:

1. **Standardization**: Interfaces define a standard set of functions that a contract must implement. This standardization is especially important in decentralized environments like Ethereum, where different contracts often interact with each other. By adhering to a known interface, contracts ensure compatibility and ease of interaction.

2. **Interoperability**: Interfaces facilitate interoperability between different contracts. For example, the ERC-20 standard interface for tokens ensures that various tokens can be handled in a consistent manner by wallets, exchanges, and other contracts.

3. **Reduced Complexity and Increased Security**: By defining a clear and limited set of interactions, interfaces can help reduce the complexity of contract interactions and improve security. When a contract only exposes a well-defined set of functions through an interface, it limits the surface area for potential vulnerabilities.

4. **Abstraction and Modularity**: Interfaces allow for a higher level of abstraction. A contract that interacts with another contract via an interface doesn't need to know the implementation details of the other contract, just the interface it exposes. This promotes modularity and the development of reusable code.

5. **Reducing Arbitrary Function Calls**: As you mentioned, using interfaces can help reduce arbitrary function calls. When contracts communicate through well-defined interfaces, there's less need for contracts to handle arbitrary data or calls, which can reduce the reliance on and complexity associated with the `fallback` function.

In summary, Solidity interfaces are essential for creating standardized, secure, and modular smart contracts. They facilitate easier and safer interactions between contracts, crucial in decentralized applications and systems.